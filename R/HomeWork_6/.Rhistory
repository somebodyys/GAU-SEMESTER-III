?hist
x <- c(2,5,3,9,8,11,6)
for(var in x){
print(var)
}
?sample
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = F)
print(z)
}
for(i in 1:500){
print(i)
}
sample(sex, 1000, replace = T)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = T)
}
z / 500
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = T)
}
z
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = T)
z
}
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = T)
print(z)
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + sample(sex, 1000, replace = T)
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + mean(sample(sex, 1000, replace = T))
}
print(z)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
z <- 0;
for(i in 1:500){
z <- z + mean(sample(sex, 1000, replace = T))
}
print(z/500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
values <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
append(values, mean(sample(sex, sample_size, replace = T))
}
print(values)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
values <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
values <- append(values, mean(sample(sex, sample_size, replace = T))
}
print(values)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
values <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
append(values, mean(sample(sex, sample_size, replace = T))
}
values
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- 0;
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
z <- z + mean(sample(sex, sample_size, replace = T))
}
print(z/500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- 0;
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <- sum + mean(sample(sex, sample_size, replace = T))
}
print(z/500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- 0;
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <- sum + mean(sample(sex, sample_size, replace = T))
}
print(sum/tries)
?hist
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <-mean(sample(sex, sample_size, replace = T))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <-mean(sample(sex, sample_size, replace = T))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <-mean(sample(sex, sample_size, replace = T))
}
sum
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- c()
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <- mean(sample(sex, sample_size, replace = T))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- c()
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
append(sum, mean(sample(sex, sample_size, replace = T)))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- c()
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
append(mean(sample(sex, sample_size, replace = T)), sum)
}
?append
append(x, 10)
x <- c()
append(x, 10)
append(x, 11)
x <- append(x, 11)
x <- append(x, 12)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
sum <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
sum <- append(sum, mean(sample(sex, sample_size, replace = T)))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
random <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
random <- append(random, mean(sample(sex, sample_size, replace = T)))
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
random <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
random <- append(random, mean(sample(sex, sample_size, replace = T)))
}
mean(random)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
random <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
random <- append(random, mean(sample(sex, sample_size, replace = T)))
}
mean(random)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
random <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
random <- append(random, mean(sample(sex, sample_size, replace = T)))
}
mean(random)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
random <- c();
sample_size <- 1000;
tries <- 500
for(i in 1:tries){
random <- append(random, mean(sample(sex, sample_size, replace = T)))
}
mean(random)
?set.seed
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
pick_random <- function(population, size, tries){
random <- c();
for(i in 1:tries){
random <- append(random, mean(sample(population, size, replace = T)))
}
return random
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
pick_random <- function(population, size, tries){
random <- c();
for(i in 1:tries){
random <- append(random, mean(sample(population, size, replace = T)))
}
print(random)
}
pick_random(sex, 1000, 500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
pick_random <- function(population, size, tries){
random <- c();
for(i in 1:tries){
random <- append(random, mean(sample(population, size, replace = T)))
}
return(random)
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
random <- append(random, mean(sample(population, size, replace = T)))
}
return(result)
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
random <- append(random, mean(sample(population, size, replace = T)))
}
return(result)
}
meanListGenerator(sex, 1500, 500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
meanListGenerator(sex, 1000, 500)
mean(meanListGenerator(sex, 1000, 500))
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
sizes <- c(500, 1000, 1500, 2000)
for(i in sizes){
meanListGenerator(sex, i, 500)
}
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
sizes <- c(500, 1000, 1500, 2000)
test <- c()
for(i in sizes){
test <- append(test, mean(meanListGenerator(sex, i, 500)))
}
test
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
meanListGenerator(sex, 1000, 500)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
sizes <- c(500, 1000, 1500, 2000)
test <- c()
for(i in sizes){
test <- append(test, mean(meanListGenerator(sex, i, 500)))
}
test
set.seed(50000)
set.seed(50000)
sex <- sample(c(0,1), 50000, replace = T, prob = c(0.7, 0.3))
meanListGenerator <- function(population, size, tries){
result <- c();
for(i in 1:tries){
result <- append(result, mean(sample(population, size, replace = T)))
}
return(result)
}
sizes <- c(500, 1000, 1500, 2000, 2500, 3000)
test <- c()
for(i in sizes){
test <- append(test, mean(meanListGenerator(sex, i, 500)))
}
test
#getting Ready
survey <- read.csv("fl_student_survey.csv")
#1
mean(survey$age[survey$gender == 'm']) - mean(survey$age[survey$gender == 'f'])
#2
mean(survey$college_GPA[survey$gender == 'm']) - mean(survey$college_GPA[survey$gender == 'f'])
#3
mean(survey$sports[survey$gender == 'm']) - mean(survey$sports[survey$gender == 'f'])
#4
CutedSport <- cut(survey$sports, breaks = c(0, 6, 10, 18), include.lowest = T, right = F, labels = c('A', 'B', 'C'))
mean(survey$age[CutedSport == 'A' & survey$gender == 'm']) - mean(survey$age[CutedSport == 'B' & survey$gender == 'm'])
#5
length(CutedSport[survey$life_after_death == 'y' & CutedSport == 'A' & survey$gender == 'm']) / length(CutedSport[CutedSport == 'A' & survey$gender == 'm']) * 100
#6
length(survey$abortion_legalize[survey$political_affiliation == 'r' & survey$gender == 'f' & survey$abortion_legalize == 'y']) / length(survey$abortion_legalize[survey$political_affiliation == 'r' & survey$gender == 'f']) * 100
#7
mean(survey$age[survey$abortion_legalize == 'y']) - mean(survey$age[survey$abortion_legalize == 'n'])
#8
max(survey$AIDS[survey$religiosity == 3])
#9
abortion_count <- length(survey$abortion_legalize[survey$gender == 'f' & survey$political_affiliation != 'r' & survey$college_GPA > 3 & survey$abortion_legalize == 'y'])
total <- length(survey$abortion_legalize[survey$gender == 'f' & survey$political_affiliation != 'r' & survey$college_GPA > 3])
abortion_count / total * 100
#10
length(survey$life_after_death[survey$religiosity != 3 & survey$life_after_death == 'y']) / length(survey$life_after_death[survey$religiosity != 3]) * 100
#getting Ready
survey <- read.csv("fl_student_survey.csv")
#1
mean(survey$age[survey$gender == 'm']) - mean(survey$age[survey$gender == 'f'])
#2
mean(survey$college_GPA[survey$gender == 'm']) - mean(survey$college_GPA[survey$gender == 'f'])
#3
mean(survey$sports[survey$gender == 'm']) - mean(survey$sports[survey$gender == 'f'])
#4
CutedSport <- cut(survey$sports, breaks = c(0, 6, 10, 18), include.lowest = T, right = F, labels = c('A', 'B', 'C'))
mean(survey$age[CutedSport == 'A' & survey$gender == 'm']) - mean(survey$age[CutedSport == 'B' & survey$gender == 'm'])
#5
length(CutedSport[survey$life_after_death == 'y' & CutedSport == 'A' & survey$gender == 'm']) / length(CutedSport[CutedSport == 'A' & survey$gender == 'm']) * 100
#6
length(survey$abortion_legalize[survey$political_affiliation == 'r' & survey$gender == 'f' & survey$abortion_legalize == 'y']) / length(survey$abortion_legalize[survey$political_affiliation == 'r' & survey$gender == 'f']) * 100
#7
mean(survey$age[survey$abortion_legalize == 'y']) - mean(survey$age[survey$abortion_legalize == 'n'])
#8
max(survey$AIDS[survey$religiosity == 3])
#9
abortion_count <- length(survey$abortion_legalize[survey$gender == 'f' & survey$political_affiliation != 'r' & survey$college_GPA > 3 & survey$abortion_legalize == 'y'])
total <- length(survey$abortion_legalize[survey$gender == 'f' & survey$political_affiliation != 'r' & survey$college_GPA > 3])
abortion_count / total * 100
#10
length(survey$life_after_death[survey$religiosity != 3 & survey$life_after_death == 'y']) / length(survey$life_after_death[survey$religiosity != 3]) * 100
survey <- read.csv("fl_student_survey.csv")
e <- c(2, 7, 16, 25,12, 15)
e
A <- matrix(c(2,-3,1,2,0,-1,1,4,5), nrow = 3, ncol = 3, byrow = T)
A
B <- A  %*% A
B
C <- B %*% B
C
e %*% A
e
A
e <- c(2, 7 16)
e <- c(2, 7, 16)
e %*% A
(e %*% A) %*% B
(e %*% B) %*% A
e
A
B
C
K <- C %*% C
K
A
B
e
e %*% A
A
key <- (e %*% A) %*% B
key
Q1 <- key[1]
Q1
matrix(c("cosO", "-sinO", "cosO", "sinO"), nrow = 2, ncol = 2, byrow = T)
a <- matrix(c(-5, 1, -3, 0, 2, 4, -1, -1, 1), nrow = 3)
a
det(a)
a
b <- a  %*% a
b
det(b)
e <- c(5, 16, 3)
Q <- (e %*% a) %*% b
Q
a
b
e
Q
R1 <- matrix(c(cos(Q[1]), -sin(Q[1]), sin(Q[1]), cos(Q[1])), nrow = 2, ncol = 2, byrow = T)
R1
m1 <- matrix
m1 <- matrix(c(7, 5))
m1
R1 %*% m1
QR <- -Q
QR
matrix(c(cos(QR[1]), -sin(QR[1]), sin(QR[1]), cos(QR[1])), nrow = 2, ncol = 2, byrow = T)
R!R<-matrix(c(cos(QR[1]), -sin(QR[1]), sin(QR[1]), cos(QR[1])), nrow = 2, ncol = 2, byrow = T)
R1R<-matrix(c(cos(QR[1]), -sin(QR[1]), sin(QR[1]), cos(QR[1])), nrow = 2, ncol = 2, byrow = T)
R1R
R1R %*% (R1 %*% m1)
library(ggplot2)
#load data
heart <- read.csv("heart.csv")
setwd("T:/University/GAU-R/HomeWork_6")
#import
library(ggplot2)
#load data
heart <- read.csv("heart.csv")
View(heart)
View(heart)
dataFreq <- function(vec, gaps = 5){
sortedVec <- sort(vec)
space <- ceiling(max(sortedVec)/gaps)
interval <- c(0)
for (i in 2:(gaps + 1)) {
interval <- append(interval, interval[i-1] + space)
}
return(data.frame(table(cut(sortedVec, interval, include.lowest = T, right = F))))
}
gapPercents <- function(frame){
frame$Freq <- (frame$Freq * 100)/sum(frame$Freq)
names(frame)[2] <- "Percent"
return(frame)
}
summedPercents <- function(percentFrame,vec, gaps = 5){
sortedVec <- sort(vec)
space <- ceiling(max(sortedVec)/gaps)
interval <- c(0)
for (i in 2:(gaps + 1)) {
interval <- append(interval, interval[i-1] + space)
}
percentFrame$Var1 <- interval[-1]
sum <- 0
for(i in 1:length(percentFrame$Percent)){
sum <- sum + percentFrame$Percent[i]
percentFrame$Percent[i] <- sum
}
return(percentFrame)
}
ggplot(dataFreq(heart$ï..age), mapping = aes(x = Var1, y = Freq)) + geom_col(aes(fill = Var1)) + labs(x = "Age", fill = "Age Groups")
ggplot(gapPercents(dataFreq(heart$ï..age)), mapping = aes(x = Var1, y = Percent)) + geom_col(aes(fill = Var1)) + labs(x = "Age", fill = "Age Groups")
ggplot(summedPercents(gapPercents(dataFreq(heart$ï..age)), heart$ï..age), mapping = aes(x = Var1, y = Percent)) + geom_col(aes(fill = Var1)) + labs(x = "Age", fill = "Age")
ggplot(dataFreq(heart$chol), mapping = aes(x = Var1, y = Freq)) + geom_col(aes(fill = Var1)) + labs(x = "Cholesterine", fill = "Cholesterine")
library(tidyr)
groups <- c("2-7", "7-12", "12-17", "17-22", "22-27", "27-32", "32-37")
values <- c(3,11,23,5,32,2,20)
data <- data.frame(groups, values)
data <- separate(data, groups, c("Start", "End"), sep = "-")
data$Start <- as.numeric(data$Start)
data$End <- as.numeric(data$End)
#Result: Grouped Mean Value
sum(((data$End + data$Start) / 2) * data$values) / sum(data$values)
ggplot(dataFreq(heart$ï..age), mapping = aes(x = Var1, y = Freq)) + geom_col(aes(fill = Var1)) + labs(x = "Age", fill = "Age Groups")
