Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1,
inset = c(-0.8, 0),
lty = 1)
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,15), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1,
inset = c(-0.8, 0),
lty = 5)
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,15), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1,
inset = c(-0.8, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1,
inset = c(-0.8, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1,
inset = c(-0.5, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1.2,
inset = c(-0.5, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1.2,
pch.cex = 1.2,
inset = c(-0.5, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1.2,
inset = c(-0.5, 0))
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1.2,
inset = c(-0.5, 0))
lines(Weight,Height)
Weight <- c(55,85,75,42,93,63,58,75,89,67)
Height <- c(161,185,174,154,188,178,170,167,181,178)
Sex <- c("f", "m", "m","f","m","m","f","m","m","f")
myData <- data.frame(Weight, Height, Sex)
par(mar = c(5,4,4,8), xpd = T)
plot(Weight,
Height,
pch = ifelse(Sex == "m", 17, 16), col = ifelse(Sex == "m", "blue", "red"),
cex = 1.5)
title("DIfference")
legend("topright",
legend = c("Male", "Female"),
col = c("blue","red"),
pch = c(17,16),
cex = 1.2,
inset = c(-0.5, 0))
14 ^ 5
(14 ^ 5) %% 14
(8 ^ 17) %% 14
(0 ^ 17) %% 14
5 * 17 %% 6
5 * 11 %% 6
5 * 17
85 %% 6
(5 * 17) %% 6
(14 ^ 5)
(14 ^ 5) %% 14
(15 ^ 5) %% 14
(15 ^ 5)
(2 ^ 5) %% 14
(4 ^ 11) %% 14
(15 ^ 5) %% 14
(1 ^ 11) %% 14
(14 ^ 5) %% 14
14 ^ 5
537824 / 14
8 ^ 17
(5 * 17) %% 6
(8 ^ 5) %% 14
(8 ^ 17) %% 14
(14 ^ 5) %% 14
(0 ^ 17) %% 14
(0 ^ 14) %% 14
(17 ^ 5) %% 14
(5 ^ 17) %% 14
(19 * 37) %% 352
(19 * 37)
703 %% 352
(5 * 281) %% 352
(9 * 313) %% 352
(15 * 47) %% 352
(8 ^ 15) %% 391
(117 ^ 47) %% 391
(117 ^ 47)
(117 ^ 47) / 391
7 * 13
6 * 12
(8 ^ 29)
(8 ^ 29) %% 91
(14 ^ 29) %% 91
(75 ^ 29) %% 91
library(ColorPalette)
?colorRampPalette
(6 ^ 14) %% 23
y <- 9
x <- 14
k <- 12
p <- 23
g <- 6
(g ^ k) %% p
a <- 6
m <- c(8,14,18,13,9,10,5)
((y ^ k)*8)%%p
((y ^ k)*m)%%p
b <- ((y ^ k)*m)%%p
m <- c(8,14,17,13,9,10,5)
b <- ((y ^ k)*m)%%p
b
b
b / (a ^ x)
(b / (a ^ x))%%p
b <- m*(y ^ k)%%p
b
b / (a ^ x)
(b / (a ^ x))%%p
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
while(length(unique(sample(boxes, 3))) != 3){
totalTries <- totalTries + 1
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
while(length(unique(sample(boxes, 3))) != 3){
totalTries <- totalTries + 1
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
for(i in iter){
while(length(unique(sample(boxes, 3))) != 3){
totalTries <- totalTries + 1
}
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
for(i in iter){
while(length(unique(sample(boxes, 3))) != 3){
totalTries <- totalTries + 1
}
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
for(i in iter){
while(length(unique(sample(boxes, 3))) != 3){
totalTries <- totalTries + 1
}
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
for(i in iter){
tries <- 0
while(length(unique(sample(boxes, 3))) != 3){
tries <- tries + 1
}
totalTries <- totalTries + tries
}
totalTries/iter
boxes <- c(rep("Tiger Woods", 2), rep("Lance Armstrong", 3), rep("Serena Williams", 5))
iter <- 1000
totalTries <- 0
for(i in iter){
tries <- 0
while(length(unique(sample(boxes, 3))) != 3){
tries <- tries + 1
}
totalTries <- totalTries + tries
}
totalTries/iter
#load
survay <- read.csv("fl_student_survey.csv")
interval <- 6
min <- min(survay$age)
max <- max(survay$age)
gaps <- ceiling((max - min) / interval)
breaks <- seq(min(survay$age), max(survay$age) + gaps, by = gaps)[1:(interval + 1)]
manCuted <- cut(survay$age[survay$gender == "m"], breaks = breaks, right = F)
femaleCuted <- cut(survay$age[survay$gender == "f"], breaks = breaks, right = F)
manFreq <- transform(table(manCuted))
femaleFreq <- transform(table(femaleCuted))
manFreq$precent <- (manFreq$Freq * 100)/sum(manFreq$Freq)
femaleFreq$precent <- (femaleFreq$Freq * 100)/sum(femaleFreq$Freq)
manFreq$summedPercents <- cumsum(manFreq$precent)
femaleFreq$summedPercents <- cumsum(femaleFreq$precent)
plot(breaks,
c(0,femaleFreq$summedPercents),
type="b",
col="blue"
)
lines(breaks,
c(0, manFreq$summedPercents),
type = "b",
col ="green")
plot((breaks[-1] + breaks[-length(breaks)])/2,
femaleFreq$precent,
type="b",
xlab = "midpoints",
ylab = "Freq",
col="blue"
)
lines((breaks[-1] + breaks[-length(breaks)])/2,
manFreq$precent,
type="b",
col = "green")
legend("topright",
legend = c("male", "female"),
title = "Genders",
fill= c("green", "blue")
)
boxplot(survay$age[survay$gender == "m"],
survay$age[survay$gender == "f"],
col= c("green", "blue"))
setwd("T:/University/GAU-R/Quiz3")
#load
survay <- read.csv("fl_student_survey.csv")
interval <- 6
min <- min(survay$age)
max <- max(survay$age)
gaps <- ceiling((max - min) / interval)
breaks <- seq(min(survay$age), max(survay$age) + gaps, by = gaps)[1:(interval + 1)]
manCuted <- cut(survay$age[survay$gender == "m"], breaks = breaks, right = F)
femaleCuted <- cut(survay$age[survay$gender == "f"], breaks = breaks, right = F)
manFreq <- transform(table(manCuted))
femaleFreq <- transform(table(femaleCuted))
manFreq$precent <- (manFreq$Freq * 100)/sum(manFreq$Freq)
femaleFreq$precent <- (femaleFreq$Freq * 100)/sum(femaleFreq$Freq)
manFreq$summedPercents <- cumsum(manFreq$precent)
femaleFreq$summedPercents <- cumsum(femaleFreq$precent)
plot(breaks,
c(0,femaleFreq$summedPercents),
type="b",
col="blue"
)
lines(breaks,
c(0, manFreq$summedPercents),
type = "b",
col ="green")
plot((breaks[-1] + breaks[-length(breaks)])/2,
femaleFreq$precent,
type="b",
xlab = "midpoints",
ylab = "Freq",
col="blue"
)
lines((breaks[-1] + breaks[-length(breaks)])/2,
manFreq$precent,
type="b",
col = "green")
legend("topright",
legend = c("male", "female"),
title = "Genders",
fill= c("green", "blue")
)
boxplot(survay$age[survay$gender == "m"],
survay$age[survay$gender == "f"],
col= c("green", "blue"))
plot(breaks,
c(0,femaleFreq$summedPercents),
type="b",
col="blue"
)
lines(breaks,
c(0, manFreq$summedPercents),
type = "b",
col ="green")
plot((breaks[-1] + breaks[-length(breaks)])/2,
femaleFreq$precent,
type="b",
xlab = "midpoints",
ylab = "Freq",
col="blue"
)
lines((breaks[-1] + breaks[-length(breaks)])/2,
manFreq$precent,
type="b",
col = "green")
library(alluvial)
# Titanic data
tit <- as.data.frame(Titanic)
# 2d
tit2d <- aggregate( Freq ~ Class + Survived, data=tit, sum)
alluvial( tit2d[,1:2], freq=tit2d$Freq, xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = tit2d$Survived != "Yes" )
alluvial( tit2d[,1:2], freq=tit2d$Freq,
hide=tit2d$Freq < 150,
xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = tit2d$Survived != "Yes" )
alluvial( tit[,1:4], freq=tit$Freq, border=NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col=ifelse( tit$Class == "3rd" & tit$Sex == "Male", "red", "gray") )
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white")
tit3d <- aggregate( Freq ~ Class + Sex + Survived, data=tit, sum)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white")
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white")
tit3d <- aggregate( Freq ~ Class + Sex + Survived, data=tit, sum)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white")
alluvial( tit2d[,1:2], freq=tit2d$Freq,
hide=tit2d$Freq < 150,
xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = tit2d$Survived != "Yes" )
ord <- list(NULL, with(tit3d, order(Sex, Survived)), NULL)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
ord <- list(NULL, with(tit3d, order(Sex, Survived)), NULL)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
ord <- list(NULL, with(tit3d, order(Sex, Survived)), NULL)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white", ordering=ord)
for (blocks in c(TRUE, FALSE, "bookends")) {
# Elaborate alluvial diagram from main examples file
alluvial( tit[, 1:4], freq = tit$Freq, border = NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col = ifelse( tit$Class == "3rd" & tit$Sex == "Male",
"red", "gray" ),
blocks = blocks )
}
alluvial( tit[,1:4], freq=tit$Freq, border=NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col=ifelse( tit$Class == "3rd" & tit$Sex == "Male", "red", "gray") )
tit3d <- aggregate( Freq ~ Class + Sex + Survived, data=tit, sum)
alluvial(tit3d[,1:3], freq=tit3d$Freq, alpha=1, xw=0.2,
col=ifelse( tit3d$Survived == "No", "red", "gray"),
layer = tit3d$Sex != "Female",
border="white")
tit2d <- aggregate( Freq ~ Class + Survived, data=tit, sum)
alluvial( tit2d[,1:2], freq=tit2d$Freq, xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = tit2d$Survived != "Yes" )
tit2d <- aggregate( Freq ~ Class + Survived, data=tit, sum)
alluvial( tit2d[,1:2], freq=tit2d$Freq, xw=0.0, alpha=0.8,
gap.width=0.1, col= "steelblue", border="white",
layer = tit2d$Survived != "Yes" )
setwd("T:/University/GAU-R/ClassWork3")
View(ord)
myData <- read.csv("Ch03_After_high_school amotsana 16.xls")
?read.csv
myData <- read.csv("Ch03_After_high_school amotsana 16.xls",header = T)
View(myData)
myData <- read.csv("Ch03_After_high_school amotsana 16.csv",header = T)
View(myData)
table(myData)
barplot(table(myData))
?barplot
View(myData)
table(myData)
barplot(table(myData),
col = elseif(table(myData)$What.Graduates.Did == "Continuing education", "red", "blue"))
barplot(table(myData))
?prop.table
barplot(prop.table(myData))
barplot(prop.table(table(myData)))
barplot(prop.table(table(myData,2)))
barplot(prop.table(table(myData),2))
?prop.table
barplot(prop.table(table(myData[,2],myData[,1]),2))
table(myData[,2],myData[,1])
library(readxl)
test <- read_xls("Ch03_Federal_Prisons amtsana 20.xls")
View(test)
Prison <- read_xls("Ch03_Federal_Prisons amtsana 20.xls")
barplot(table(Prison))
barplot(prop.table(table(Prison),2))
barplot(prop.table(table(Prison[,2], Prison[,1]),2))
barplot(prop.table(table(Prison),2))
table(Prison)
barplot(prop.table(table(t(Prison)),2))
table(Prison[,2])
table(Prison[,2], Prison[,1])
barplot(prop.table(table(Prison),2))
barplot(prop.table(transform(table(Prison)),2))
